#include <iostream>
using namespace std;

int Partition(int num[], int lowInd, int highInd) {
    int midpoint = lowInd + (highInd - lowInd) / 2;
    int pivot = num[midpoint];
    int temp;

    bool done = false;

    while (!done) {
        while (num[lowInd] < pivot) {
            lowInd++;
        }
        while (pivot < num[highInd]) {
            highInd--;
        }

        if (lowInd >= highInd) {
            done = true;
        } else {
            temp = num[lowInd];
            num[lowInd] = num[highInd];
            num[highInd] = temp;

            lowInd++;
            highInd--;
        }
    }

    return highInd;
}

//
#include <iostream>
void Quicksort(int num[], int lowInd, int highInd) {
    if (lowInd >= highInd) {
        return;
    }
    
    int lowEndInd = Partition(num, lowInd, highInd);
    
    Quicksort(num, lowInd, lowEndInd);
    Quicksort(num, lowEndInd + 1, highInd);
}

//
#include <iostream>
#include "Partition.h"
#include "Quicksort.h"
using namespace std;

int main() {
    int num[] = {2, 9, 3, 8, 5, 7, 4, 0};
    const int NUMBERS_SIZE = 8;
    int i = 0;
    
    cout << "UNSORTED: " << endl;
    
    for(i = 0; i < NUMBERS_SIZE; i++) {
        cout << num[i] << endl;
    }
    
    Quicksort(num, 0, NUMBERS_SIZE - 1); // Add a semicolon here
    
    cout << "SORTED: " << endl;
    
    for(i = 0; i < NUMBERS_SIZE; i++) {
        cout << num[i] << endl;
    }
    
    return 0;
}
